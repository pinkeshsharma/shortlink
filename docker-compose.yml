services:
  db:
    image: postgres:15
    container_name: shortener-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shortenerdb
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d shortenerdb" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    networks:
      - shortlink-net

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - shortlink-net

  shortener-service:
    build:
      context: ./service
      dockerfile: docker/dockerfile
    container_name: shortener-service
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        until nc -z redis 6379; do echo 'Waiting for Redis...'; sleep 2; done &&
        java -jar /app/app.jar
      "
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/shortenerdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    ports:
      - "8080:8080"
    networks:
      - shortlink-net

  shortlink-ui:
    build:
      context: ./shortlink-ui
      dockerfile: Dockerfile
    container_name: shortlink-ui
    restart: always
    depends_on:
      - shortener-service
    ports:
      - "3000:80"
    networks:
      - shortlink-net

networks:
  shortlink-net:
    driver: bridge

volumes:
  db_data:
